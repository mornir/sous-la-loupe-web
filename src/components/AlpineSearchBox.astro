<div class="relative" x-data="search">
  <div class="flex flex-wrap items-stretch">
    <input
      autocomplete="off"
      type="search"
      class="flex-auto rounded-l border border-solid border-neutral-300 px-3 py-2 text-neutral-700 outline-none transition duration-200 ease-in-out focus:border-primary focus:text-neutral-700 focus:shadow-inner focus:outline-none dark:border-neutral-600 dark:text-neutral-500 dark:placeholder:text-neutral-500 dark:focus:border-primary"
      placeholder="Rechercher un mot allemand"
      aria-label="Rechercher"
      x-model="searchPattern"
    />
  </div>
  <ul
    class="border-2 mt-2 shadow-lg p-2 absolute w-full"
    x-show="showBox"
    @click.outside="showBox = false"
  >
    <template x-for="result in searchResults" :key="result.item.id">
      <li class="py-2 text-lg">
        <a :href="'/fiches/' + result.item.slug" x-text="result.item.vedette"
        ></a>
      </li>
    </template>
  </ul>
</div>

<script>
  import Alpine from 'alpinejs'
  import Fuse from 'fuse.js'
  import list from '../data/vedettes.json'

  const fuseOptions = {
    // isCaseSensitive: false,
    // includeScore: false,
    // shouldSort: true,
    // includeMatches: false,
    // findAllMatches: false,
    // minMatchCharLength: 1,
    // location: 0,
    // threshold: 0.6,
    // distance: 100,
    // useExtendedSearch: false,
    // ignoreLocation: false,
    // ignoreFieldNorm: false,
    // fieldNormWeight: 1,
    keys: ['vedette'],
  }
  const fuse = new Fuse(list, fuseOptions)

  document.addEventListener('alpine:init', () => {
    Alpine.data('search', () => ({
      searchPattern: '',
      showBox: false,
      selectedIndex: null,
      get searchResults() {
        if (!this.searchPattern) return []
        this.showBox = true
        return fuse.search(this.searchPattern).slice(0, 5)
      },
    }))
  })
</script>
