---
import { Icon } from 'astro-icon/components'
---

<form autocomplete="off" x-data="search" class="relative max-w-lg mx-auto">
  <div class="flex text-xl">
    <input
      x-model="searchPattern"
      type="search"
      class="flex-1 w-4/5 p-4 shadow-md focus:outline-none rounded-lg rounded-r-none focus:border-accent border-2 border-primary hover:border-accent"
      placeholder="Rechercher un terme allemand"
    />
    <button
      class="text-white px-2 shadow-md bg-primary rounded-md rounded-l-none focus:outline-none focus:bg-accent hover:bg-accent"
      type="button"
      ><Icon name="mdi:magnify" class="inline-block text-3xl" /></button
    >
  </div>
  <ul
    class="border-2 mt-2 shadow-lg absolute rounded-lg"
    x-show="showBox"
    @click.outside="showBox = false"
  >
    <template x-for="result in searchResults" :key="result.item.id">
      <li class="hover:bg-accent hover:text-white">
        <a
          :href="'/fiches/' + result.item.slug"
          x-text="result.item.vedette"
          class="text-lg py-2 px-8 block"></a>
      </li>
    </template>
  </ul>
</form>

<script>
  import Alpine from 'alpinejs'
  import Fuse from 'fuse.js'
  import list from '../data/vedettes.json'

  const fuseOptions = {
    // isCaseSensitive: false,
    // includeScore: false,
    // shouldSort: true,
    // includeMatches: false,
    // findAllMatches: false,
    // minMatchCharLength: 1,
    // location: 0,
    // threshold: 0.6,
    // distance: 100,
    // useExtendedSearch: false,
    // ignoreLocation: false,
    // ignoreFieldNorm: false,
    // fieldNormWeight: 1,
    keys: ['vedette'],
  }
  const fuse = new Fuse(list, fuseOptions)

  document.addEventListener('alpine:init', () => {
    Alpine.data('search', () => ({
      searchPattern: '',
      showBox: false,
      selectedIndex: null,
      get searchResults() {
        if (!this.searchPattern) return []
        this.showBox = true
        return fuse.search(this.searchPattern).slice(0, 5)
      },
    }))
  })
</script>
