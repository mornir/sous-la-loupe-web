---
import { Icon } from 'astro-icon/components'
---

<form
  autocomplete="off"
  x-data="search"
  x-init="$refs.searchInput.focus()"
  class="relative max-w-lg mx-auto"
  @submit.prevent="goToFiche"
>
  <div class="relative flex items-center">
    <Icon
      name="mdi:magnify"
      class="text-5xl absolute pointer-events-none text-gray-400 pl-4"
    />
    <input
      x-model="searchPattern"
      x-ref="searchInput"
      type="search"
      class="w-full pl-14 p-4 shadow-md focus:outline-none rounded-lg focus:border-accent border-2 border-primary hover:border-accent text-xl"
      placeholder="Rechercher un terme allemand"
      @keydown.arrow-down.prevent=" moveDownList()"
      @keydown.arrow-up.prevent="moveUpList()"
      @input="selectedIndex = 0"
    />
  </div>
  <ul
    class="border-2 mt-2 shadow-lg absolute w-full rounded-lg bg-white"
    x-show="showBox"
    x-cloak
    @click.outside="showBox = false"
  >
    <template x-for="(result, index) in searchResults" :key="result.item.id">
      <li
        class="hover:bg-[#e6bd9e]"
        :class="{'bg-accent hover:bg-accent': index == selectedIndex }"
      >
        <a
          :href="'/fiches/' + result.item.slug"
          x-text="result.item.vedette"
          class="text-lg py-2 px-8 block"></a>
      </li>
    </template>
  </ul>
</form>

<script>
  import Alpine from 'alpinejs'
  import Fuse from 'fuse.js'
  import list from '../data/vedettes.json'

  const fuseOptions = {
    // isCaseSensitive: false,
    // includeScore: false,
    // shouldSort: true,
    // includeMatches: false,
    // findAllMatches: false,
    // minMatchCharLength: 1,
    // location: 0,
    // threshold: 0.6,
    // distance: 100,
    // useExtendedSearch: false,
    // ignoreLocation: false,
    // ignoreFieldNorm: false,
    // fieldNormWeight: 1,
    keys: ['vedette'],
  }
  const fuse = new Fuse(list, fuseOptions)

  document.addEventListener('alpine:init', () => {
    Alpine.data('search', () => ({
      searchPattern: '',
      showBox: false,
      selectedIndex: 0,
      moveUpList() {
        this.selectedIndex > 0
          ? this.selectedIndex--
          : (this.selectedIndex = this.searchResults.length - 1)
      },
      moveDownList() {
        this.selectedIndex < this.searchResults.length - 1
          ? this.selectedIndex++
          : (this.selectedIndex = 0)
      },
      goToFiche() {
        if (this.searchResults.length) {
          window.location.href = `/fiches/${
            this.searchResults[this.selectedIndex].item.slug
          }/`
        }
      },
      get searchResults() {
        if (!this.searchPattern) return []
        this.showBox = true
        return fuse.search(this.searchPattern).slice(0, 5)
      },
    }))
  })
</script>
